name: CI

on:
    push:
    pull_request:

jobs:
    tests:
        name: Docker build
        runs-on: ubuntu-latest
        steps:
          env:
          PROJECT_HOST: ${{ secrets.PROJECT_HOST }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
          KEYCLOAK_USER: ${{ secrets.KEYCLOAK_USER }}
          KEYCLOAK_PWD: ${{ secrets.KEYCLOAK_PWD }}
          KEYCLOAK_DB_NAME: ${{ secrets.KEYCLOAK_DB_NAME }}
          KEYCLOAK_DB_USER: ${{ secrets.KEYCLOAK_DB_USER }}
          KEYCLOAK_DB_PWD: ${{ secrets.KEYCLOAK_DB_PWD }}
          API_DB_USER: ${{ secrets.API_DB_USER }}
          API_DB_PWD: ${{ secrets.API_DB_PWD }}
          MERCURE_PUBLISHER_JWT_KEY: ${{ secrets.MERCURE_PUBLISHER_JWT_KEY }}
          MERCURE_SUBSCRIBER_JWT_KEY: ${{ secrets.MERCURE_SUBSCRIBER_JWT_KEY }}
          MERCURE_JWT_TOKEN: ${{ secrets.MERCURE_JWT_TOKEN }}
          CORS_ALLOWED_ORIGIN: ${{ secrets.CORS_ALLOWED_ORIGIN }}
          
          - name: Checkout
            uses: actions/checkout@v2
          - name: Pull images
            run: docker-compose pull
          - name: Start services
            run: docker-compose up --build -d
          - name: Wait for services
            run: |
                while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose ps -q php)")"; do
                  case $status in
                    starting) sleep 1;;
                    healthy) exit 0;;
                    unhealthy)
                      docker-compose ps
                      docker-compose logs
                      exit 1
                    ;;
                  esac
                done
                exit 1
          - name: Check HTTP reachability
            run: curl -v -o /dev/null http://localhost
          - name: Check HTTPS reachability
            run: curl  -vk -o /dev/null https://localhost
          - name: PHPUnit
            run: docker-compose exec -T php bin/phpunit
          - name: Jest
            run: docker-compose exec -T pwa yarn test --passWithNoTests
